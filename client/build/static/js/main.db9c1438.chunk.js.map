{"version":3,"sources":["Game.js","Platform.js","Platforms.js","Login.js","AddGame.js","Admin.js","App.js","index.js"],"names":["Game","props","API_URL","process","state","game","event","value","target","this","setState","name","gameId","platformId","fetch","method","headers","then","res","json","resp","game_id","getGame","console","log","content","Fragment","condition","price","sellerName","sellerEmail","to","Component","Platform","platform","getPlatform","id","games","map","h","_id","key","onChange","handleChange","type","length","Platforms","platforms","onClick","_","addPlatform","Login","password","username","preventDefault","logIn","onSubmit","submit","logOut","AddGame","email","find","p","addGame","style","e","g","Name","App","token","fetchData","url","result","k","body","JSON","stringify","className","path","Admin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db9c1438.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from \"@reach/router\";\r\n\r\nclass Game extends Component {\r\n    API_URL = process.env.REACT_APP_API_URL;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            game: null\r\n        };\r\n    };\r\n\r\n    handleChange(event) {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [event.target.name]: value\r\n        });\r\n    }\r\n\r\n     getGame(gameId, platformId) {\r\n        return fetch(`${this.API_URL}/platforms/${platformId}/games/${gameId}`, {\r\n           method: \"GET\",\r\n           headers: {\r\n               \"Content-Type\": \"application/json; charset=utf-8\"\r\n           },\r\n       }).then(res => res.json()).then(resp => resp)\r\n\r\n}\r\n\r\n    render() {\r\n        if (!this.state.game && !this.state.game_id) {\r\n            this.getGame(this.props.gameId, this.props.platformId).then(game => {\r\n                this.setState({\r\n                    game: game\r\n                })\r\n            });\r\n        }\r\n\r\n\r\n        console.log(this.state.game)\r\n\r\n        let content = <p>Loading</p>;\r\n        if (this.state.game) {\r\n            content =\r\n                <React.Fragment>\r\n                    {/* <h1>{game.name}</h1> */}\r\n\r\n                    <h3>{this.state.game.name}</h3>\r\n                    <ul>\r\n                        <li>Condition: {this.state.game.condition}</li>\r\n                        <li>Price: ${this.state.game.price}</li>\r\n                        <li>Posters name: {this.state.game.sellerName}</li>\r\n                        <li>Posters email: {this.state.game.sellerEmail}</li>\r\n                    </ul>\r\n\r\n                    {/* <input name=\"newGame\" onChange={(event) => this.handleChange(event)} type=\"text\"/>\r\n                    <button onClick={(event) => this.props.addGame(this.props.id, this.state.name)}\r\n                            type=\"submit\">Add New Game</button> */}\r\n\r\n                    <br/>\r\n                    <Link to={`/platforms/${this.props.platformId}`}>Back</Link>\r\n                </React.Fragment>\r\n        }\r\n\r\n        // if (game) {\r\n        //         return (\r\n        //            <React.Fragment>\r\n   \r\n        //            <h1>{game.name}</h1>\r\n   \r\n        //             <h2>No games found. Add some.</h2>\r\n        //             <Link to=\"/\">Back</Link>\r\n        //             </React.Fragment>\r\n   \r\n        //         )\r\n        // }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"@reach/router\";\r\nimport Game from './Game';\r\n\r\nclass Platform extends Component {\r\n\r\n    handleChange(event) {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [event.target.name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const platform = this.props.getPlatform(this.props.id);\r\n        console.log(this.props.id);\r\n\r\n        let content = <p>Loading</p>;\r\n        if (platform) {\r\n            content =\r\n                <React.Fragment>\r\n                    <h1>{platform.name}</h1>\r\n\r\n                    <h3>Games</h3>\r\n                    <ul>\r\n                        {platform.games.map(h => <li><Link to={`/platforms/${this.props.id}/games/${h._id}`} key={h}>{h.name}</Link></li>)}\r\n                    </ul>\r\n\r\n                    <input name=\"newGame\" onChange={(event) => this.handleChange(event)} type=\"text\"/>\r\n\r\n                    <br/>\r\n                    <Link to=\"/\">Back</Link>\r\n                </React.Fragment>\r\n        }\r\n\r\n        if (platform) {\r\n        if (platform.games.length == 0) {\r\n                return (\r\n                   <React.Fragment>\r\n   \r\n                   <h1>{platform.name}</h1>\r\n   \r\n                    <h2>No games found. Add some.</h2>\r\n                    <Link to=\"/\">Back</Link>\r\n                    </React.Fragment>\r\n   \r\n                )\r\n            }\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default Platform;\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"@reach/router\";\r\n\r\nclass Platforms extends Component {\r\n\r\n    handleChange(value) {\r\n        this.setState({\r\n            value: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Game marketplace</h1>\r\n                <ol>\r\n                    {this.props.platforms.map(platform =>\r\n                        <li key={platform._id}>\r\n                            <Link to={`/platforms/${platform._id}`}>{platform.name}</Link>\r\n                        </li>)}\r\n                </ol>\r\n\r\n                <input name=\"newKittenName\" onChange={(event) => this.handleChange(event.target.value)} type=\"text\"/>\r\n                <button onClick={_ => this.props.addPlatform(this.state.value)} type=\"submit\">Add New Platform</button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Platforms;\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"@reach/router\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: 'admin',\r\n            username: 'admin'\r\n\r\n        };\r\n    };\r\n\r\n    handleChange(value) {\r\n        this.setState({\r\n            value: value\r\n        });\r\n    }\r\n\r\n    submit(event) {\r\n        event.preventDefault();\r\n        this.props.logIn(this.state.username, this.state.password);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Login</h1>\r\n                {this.props.username === null ? \r\n                                <form onSubmit={(event) => this.submit(event)}>\r\n                                <label>\r\n                                    Username:\r\n                                    <input type=\"text\" onChange={event => this.setState({username: event.target.value})}value={this.state.username} name=\"username\" />\r\n                                </label>\r\n                                <label>\r\n                                    Password:\r\n                                    <input type=\"password\" onChange={event => this.setState({password: event.target.value})}value={this.state.password} name=\"password\" />\r\n                                </label>\r\n                                <input type=\"submit\" value=\"Log in\" />\r\n                            </form>\r\n                            :\r\n                            <React.Fragment>\r\n                            <h4>Logged in as: {this.props.username}</h4>\r\n                            <button onClick={() => this.props.logOut()}>Log out</button>\r\n                            <br />\r\n                            </React.Fragment>\r\n\r\n            }\r\n\r\n                <Link to=\"/\">Back</Link>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"@reach/router\";\r\n\r\nclass AddGame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            platform: null,\r\n            name: '',\r\n            condition: null,\r\n            platform: null,\r\n            email: '',\r\n            price: ''\r\n        };\r\n    };\r\n\r\n\r\n\r\n    handleChange(value) {\r\n        this.setState({\r\n            value: value\r\n        });\r\n    }\r\n\r\n    submit(event) {\r\n        event.preventDefault();\r\n        const game = {\r\n            name: this.state.name,\r\n            condition: this.state.condition,\r\n            price: this.state.price,\r\n            sellerName: this.props.username,\r\n            sellerEmail: this.state.email\r\n        }\r\n        const platform = this.props.platforms.find(p => this.state.platform === p.name)._id\r\n        this.props.addGame(platform, game);\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        console.log(this.state)\r\n\r\n        const knownGames = [\r\n        'Jumping simulator 2012',\r\n        'Walking simulator 2014',\r\n        'Sleeping simulator 2016',\r\n        'Sitting simulator 2020',\r\n        'Cooking simulator 2008',\r\n        'Life simulator 2006',\r\n        'Driving simulator 1990',\r\n        'Boredom simulator 1809',\r\n        'Work simulator 2000 BC'\r\n        ]\r\n\r\n        const conditions = [\r\n            'Brand new',\r\n            'Like new',\r\n            'Very good',\r\n            'Good',\r\n            'Acceptable'\r\n        ]\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Add game</h1>\r\n                {this.props.username ? \r\n                                <form style={{\"display\": \"inline-grid\"}} onSubmit={(event) => this.submit(event)}>\r\n                                <label>\r\n                                    Platform:\r\n                                    <select onChange={(e) => this.setState({platform: e.target.value})} value={this.state.platform}>\r\n                                        {this.props.platforms.map(p => <option>{p.name}</option>)}\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Game:\r\n                                    <select onChange={(e) => this.setState({name: e.target.value})} value={this.state.name}>\r\n                                        {knownGames.map(g => <option>{g}</option>)}\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Condition:\r\n                                    <select onChange={(e) => this.setState({condition: e.target.value})} value={this.state.condition}>\r\n                                        {conditions.map(g => <option>{g}</option>)}\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Your email:\r\n                                    <input type=\"text\" onChange={event => this.setState({email: event.target.value})} value={this.state.email} name=\"email\" />\r\n                                </label>\r\n                                <label>\r\n                                    Game price:\r\n                                    <input type=\"text\" onChange={event => this.setState({price: event.target.value})} value={this.state.price} name=\"price\" />\r\n                                </label>\r\n                                <input type=\"submit\" value=\"Add game\" />\r\n                            </form>\r\n                            :\r\n                            <React.Fragment>\r\n                                {this.props.username}\r\n                                <br />\r\n                            <h4>You need to be logged in to add a game. <Link to=\"/login\">Click here to log in</Link></h4>\r\n                            \r\n\r\n                            <br />\r\n                            </React.Fragment>\r\n\r\n            }\r\n\r\n                <Link to=\"/\">Back</Link>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AddGame;\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"@reach/router\";\r\n\r\nclass Name extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n        };\r\n    };\r\n\r\n\r\n\r\n    handleChange(value) {\r\n        this.setState({\r\n            value: value\r\n        });\r\n    }\r\n\r\n    submit(event) {\r\n        event.preventDefault();\r\n\r\n        this.props.addPlatform(this.state.name)\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.state)\r\n\r\n\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Admin</h1>\r\n                {this.props.username === 'admin' ?\r\n                    <React.Fragment>\r\n                        <h3>Add platform</h3>\r\n\r\n                        <form style={{ \"display\": \"inline-grid\" }} onSubmit={(event) => this.submit(event)}>\r\n                            <label>\r\n                                Platform name:\r\n                                    <input type=\"text\" onChange={event => this.setState({ name: event.target.value })} value={this.state.name} name=\"name\" />\r\n                            </label>\r\n                            <input type=\"submit\" value=\"Add platform\" />\r\n                        </form>\r\n                    </React.Fragment>\r\n\r\n                    :\r\n                    <React.Fragment>\r\n                        {this.props.username}\r\n                        <br />\r\n                        <h4>You need to be logged in with an admin account to use this page <Link to=\"/login\">Click here to log in</Link></h4>\r\n\r\n\r\n                        <br />\r\n                    </React.Fragment>\r\n\r\n                }\r\n\r\n                <Link to=\"/\">Back</Link>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Name;\r\n","import React, {Component} from 'react';\r\nimport {Router} from \"@reach/router\";\r\nimport Platform from \"./Platform\";\r\nimport Platforms from \"./Platforms\";\r\nimport Game from \"./Game\";\r\nimport Login from \"./Login\";\r\nimport AddGame from \"./AddGame\";\r\nimport Admin from './Admin';\r\nimport {Link} from \"@reach/router\";\r\n\r\n\r\nclass App extends Component {\r\n    API_URL = process.env.REACT_APP_API_URL;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            platforms: [],\r\n            token: null,\r\n            username: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData().then(() => console.log(\"Platforms gotten!\"));\r\n    }\r\n\r\n    async fetchData() {\r\n        let url = `${this.API_URL}/platforms`; // URL of the API.\r\n        let result = await fetch(url); // Get the data\r\n        let json = await result.json(); // Turn it into json\r\n        return this.setState({ // Set it in the state\r\n            platforms: json\r\n        })\r\n    }\r\n\r\n    getPlatform(id) {\r\n        return this.state.platforms.find(k => k._id === id);\r\n    }\r\n\r\n    async addPlatform(name) {\r\n        await fetch(`${this.API_URL}/platforms`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n                \"Authorization\": \"Bearer \" + this.state.token\r\n            },\r\n            body: JSON.stringify({name: name, games: ['Examples']})\r\n        });\r\n        await this.fetchData();\r\n    }\r\n\r\n    async addGame(platformId, game) {\r\n        await fetch(`${this.API_URL}/platforms/${platformId}/games`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n                \"Authorization\": \"Bearer \" + this.state.token\r\n            },\r\n            body: JSON.stringify({game: game})\r\n        });\r\n        await this.fetchData();\r\n    }\r\n\r\n    async addPlatform(name) {\r\n        await fetch(`${this.API_URL}/platforms/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n                \"Authorization\": \"Bearer \" + this.state.token\r\n            },\r\n            body: JSON.stringify({name: name})\r\n        });\r\n        await this.fetchData();\r\n    }\r\n\r\n    async logIn(username, password) {\r\n        fetch(`${this.API_URL}/users/authenticate/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\"\r\n            },\r\n            body:  JSON.stringify({\r\n                username: username,\r\n                password: password\r\n            }),\r\n        }).then(res => res.json()).then(resp => {\r\n            this.setState({\r\n                token: resp.token,\r\n                username: resp.username\r\n            })\r\n        });\r\n    }\r\n\r\n    logOut(){\r\n        this.setState({\r\n            token: null,\r\n            username: null\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/login\">Login</Link>\r\n                <br />\r\n                <Link to=\"/admin\">Admin</Link>\r\n                <br />\r\n\r\n                <Link to=\"/add\">Add Game</Link>\r\n\r\n\r\n                <Router>\r\n                    <Platform path=\"/platforms/:id\" getPlatform={id => this.getPlatform(id)}\r\n                            addGame={(platformId, game) => this.addGame(platformId, game)} />\r\n                    <Platforms path=\"/\" platforms={this.state.platforms}\r\n                             addPlatform={name => this.addPlatform(name)}/>\r\n                    <Game path=\"/platforms/:platformId/games/:gameId\" getGame={(gameId, platformId) => this.getGame(gameId, platformId)} />\r\n                    <Login path=\"/login\" logOut={() => this.logOut()} logIn={(username, password) => this.logIn(username, password)} username={this.state.username}/>\r\n                    <AddGame path=\"/add\" username={this.state.username} addGame={(platformId, game) => this.addGame(platformId, game)} platforms={this.state.platforms} />\r\n                    <Admin path=\"/admin\" username={this.state.username} addPlatform={(name) => this.addPlatform(name)} />\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}